---
- name: Install docker
  hosts: all
  become: true

  vars:
    docker_edition: 'ce'
    # в readme роли приведен формат docker_package:
    # без версии пакета, с версией в зависимости от ОС RH/Debian based
    docker_package: "docker-{{ docker_edition }}=18.06*"
    docker_package_state: present
    docker_service_state: started
    docker_service_enabled: true
    docker_restart_handler_state: restarted
    docker_install_compose: true
    docker_compose_version: "1.24.0"
    docker_install_machine: true
    docker_machine_version: "v0.16.0"

  pre_tasks:
    - name: Set Linux Mint facts
      vars:
        fact_base_os: "{{ lookup('file', '/etc/upstream-release/lsb-release') }}"
      set_fact:
        #Для отдельной задачи pre_tasks: Return base OS of Linux Min
        #  command: cat /etc/upstream-release/lsb-release
        #  register: fact_base_os
        #ansible_distribution: "{{ fact_base_os.stdout| regex_search('DISTRIB_ID=([^\n]+)', '\\1')|first| lower }}"
        #ansible_distribution_release: "{{ fact_base_os.stdout| regex_search('DISTRIB_CODENAME=([^\n]+)', '\\1')|first| lower }}"

        #Для переменной в этой же задаче
        #  fact_base_os: "{{ lookup('file', '/etc/upstream-release/lsb-release') }}"
        ansible_distribution: "{{ fact_base_os| regex_search('DISTRIB_ID=([^\n]+)', '\\1')|first|lower }}"
        ansible_distribution_release: "{{ fact_base_os| regex_search('DISTRIB_CODENAME=([^\n]+)', '\\1')|first| lower }}"
      when:
        ansible_facts['distribution'] == "Linux Mint"
    - debug: msg="Set distribution - {{ ansible_distribution }} / {{ ansible_distribution_release }}"

  roles:
  - docker
